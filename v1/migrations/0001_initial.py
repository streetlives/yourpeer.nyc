# Generated by Django 4.1.7 on 2023-03-30 17:59

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccessibilityForDisabilities",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("accessibility", models.TextField(blank=True, null=True)),
                ("details", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "accessibility_for_disabilities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Comments",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("content", models.TextField(blank=True, null=True)),
                ("posted_by", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("contact_info", models.TextField(blank=True, null=True)),
                ("reply_to_id", models.UUIDField(blank=True, null=True)),
                ("hidden", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "comments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentsInfos",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("recertification_time", models.TextField(blank=True, null=True)),
                ("grace_period", models.TextField(blank=True, null=True)),
                ("additional_info", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "documents_infos",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Eligibility",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("eligible_values", models.JSONField()),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "eligibility",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EligibilityParameters",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField(unique=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "eligibility_parameters",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ErrorReports",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("general_location_error", models.BooleanField()),
                ("services", models.TextField()),
                ("content", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "error_reports",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EventRelatedInfo",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("event", models.TextField()),
                ("information", models.TextField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "event_related_info",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HolidaySchedules",
            fields=[
                ("id", models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ("closed", models.BooleanField(blank=True, null=True)),
                ("opens_at", models.TimeField(blank=True, null=True)),
                ("closes_at", models.TimeField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("location_id", models.UUIDField(blank=True, null=True)),
                ("service_id", models.UUIDField(blank=True, null=True)),
                ("service_at_location_id", models.UUIDField(blank=True, null=True)),
                ("weekday", models.IntegerField(blank=True, null=True)),
                ("occasion", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "holiday_schedules",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HolidaySchedules20220827Backup",
            fields=[
                ("id", models.UUIDField(blank=True, primary_key=True, serialize=False)),
                ("closed", models.BooleanField(blank=True, null=True)),
                ("opens_at", models.TimeField(blank=True, null=True)),
                ("closes_at", models.TimeField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("location_id", models.UUIDField(blank=True, null=True)),
                ("service_id", models.UUIDField(blank=True, null=True)),
                ("service_at_location_id", models.UUIDField(blank=True, null=True)),
                ("weekday", models.IntegerField(blank=True, null=True)),
                ("occasion", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "holiday_schedules_20220827_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Languages",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("language", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "languages",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocationLanguages",
            fields=[
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("language_id", models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "location_languages",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Locations",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("transportation", models.TextField(blank=True, null=True)),
                ("position", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("additional_info", models.TextField(blank=True, null=True)),
                ("hidden_from_search", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "locations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocationSuggestions",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("position", models.TextField(blank=True, null=True)),
                ("taxonomy_ids", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "location_suggestions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Metadata",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("resource_id", models.UUIDField()),
                ("resource_table", models.TextField()),
                ("last_action_date", models.DateTimeField()),
                ("last_action_type", models.TextField()),
                ("field_name", models.TextField(blank=True, null=True)),
                ("previous_value", models.TextField(blank=True, null=True)),
                ("replacement_value", models.TextField(blank=True, null=True)),
                ("updated_by", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("source", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "metadata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Organizations",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "organizations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PaymentsAccepted",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("payment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "payments_accepted",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Phones",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("number", models.TextField()),
                ("extension", models.IntegerField(blank=True, null=True)),
                ("type", models.TextField(blank=True, null=True)),
                ("language", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "phones",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PhysicalAddresses",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("address_1", models.TextField()),
                ("city", models.TextField()),
                ("region", models.TextField(blank=True, null=True)),
                ("state_province", models.TextField()),
                ("postal_code", models.TextField()),
                ("country", models.TextField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "physical_addresses",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RegularSchedules",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("weekday", models.IntegerField()),
                ("opens_at", models.TimeField(blank=True, null=True)),
                ("closes_at", models.TimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "regular_schedules",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RequiredDocuments",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("document", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "required_documents",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sequelizemeta",
            fields=[
                (
                    "name",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "SequelizeMeta",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceAreas",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("postal_codes", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "service_areas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceAtLocations",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "service_at_locations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceLanguages",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "service_languages",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Services",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                ("interpretation_services", models.TextField(blank=True, null=True)),
                ("fees", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("additional_info", models.TextField(blank=True, null=True)),
                ("who_does_it_serve", models.TextField(blank=True, null=True)),
                ("ages_served", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "services",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServicesAtLocations",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("location_id", models.UUIDField(blank=True, null=True)),
                ("service_id", models.UUIDField(blank=True, null=True)),
            ],
            options={
                "db_table": "services_at_locations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceTaxonomy",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "service_taxonomy",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceTaxonomySpecificAttributes",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("values", models.JSONField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "service_taxonomy_specific_attributes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SpatialRefSys",
            fields=[
                ("srid", models.IntegerField(primary_key=True, serialize=False)),
                ("auth_name", models.CharField(blank=True, max_length=256, null=True)),
                ("auth_srid", models.IntegerField(blank=True, null=True)),
                ("srtext", models.CharField(blank=True, max_length=2048, null=True)),
                ("proj4text", models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                "db_table": "spatial_ref_sys",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Taxonomies",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("parent_name", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "taxonomies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaxonomySpecificAttributes",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField(unique=True)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "taxonomy_specific_attributes",
                "managed": False,
            },
        ),
    ]
